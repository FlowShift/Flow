#
# $Id$
#
# Configuration for a MetaSOY! server installation

#
# Is this a development deployment?

dev_deployment = false

#
# The public URL that should be used to access this Whirled installation. This
# URL *must* end in a slash.

# server_url = http://www.whirled.com/

#
# The hostname used by the Presents client to connect to the server

server_host = test.whirled.com

#
# The port on which the world server listens to Flash's socket policy requests.

socket_policy_port = 47623

#
# The port on which the server listens for client and HTTP connections.

server_ports = 47624
http_port = 8080

#
# A regular expression used to extract the node id from our hostname. In
# production we use this instead of explicit node names to determine our node
# id and name. Developer installations should leave this commented out.

# host_node_pattern = whirled([0-9]+).luna.threerings.net

#
# A pattern used to generate the server_host value for nodes based on their
# node id using printf-style formatting. In production we would use:
#
# server_host_pattern = whirled%d.whirled.com
#
# A developer installation should leave this value commented out.

# server_host_pattern = whirled%d.whirled.com

#
# If uncommented, this value will be used to adjust the server_ports and
# http_port settings for each node by adding this offset and the node's id to
# the default values for those configurations like so:
#
# node_value = default_value + node_port_offset + node_id
#
# So if you set http_port to 8080 and node_port_offset to -1 then:
#
# msoy1.http_port = 8080 (default) + -1 (offset) + 1 (node id) = 8080
# msoy1.http_port = 8080 (default) + -1 (offset) + 2 (node id) = 8081
# etc.
#
# The same goes for the server_ports values.  This is only useful for local
# developer's deployments where they run multiple servers on the same machine.

# node_port_offset = -1

#
# If this server is running as a part of a cluster, this value should be set to
# a shared secret that will be used to authenticate with other servers in the
# cluster. If it is left commented out, the server will run standalone.

# server_secret = Is it secret? Is it safe?

#
# The directory from which the server is run. Used to put log files in the
# proper location and things like that.

server_root = /export/msoy

#
# Whether or not to log HTTP requests to log/access_NODE.log.yyyy_mm_dd

# log_http_requests = false

#
# Auto-restart server if code changes (used on dev server)

# auto_restart = false

#
# How many milliseconds an invoker unit may run before it's logged as a warning.

# long_invoker_unit = 3000

#
# Email addresses used by the server

from_address = "Whirled Mailbot" <peas@whirled.com>
agents_address = "Whirled Agents" <msoy-agents@threerings.net>
cashout_address = "Whirled Cash Outs" <blingcashout@threerings.net>

#
# Configures the group used to determine who is eligible for issue assignment

# issue_group_id = 0

#
# Configures the group used for global announcements

# announce_group_id = 0

#
# Configures the group used for selecting new users' startup gifts

# startup_group_id = 0

#
# Configures the group used for any game that has no group

# default_game_group_id = 0

#
# Configures the member or members used for staff favorites

# shop_favorites_member_ids = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

#
# Rooms winning the most recent Design Your Whirled contest, displayed on the main rooms page.
# These are in order starting with 1st place, 2nd, 3rd, five honorable mentions, then some
# number of 'too cool for school' runners-up.

# contest_winning_scene_ids = 9, 7, 4, 12, 11, 5, 6, 8, 10

#
# Defines the directory into which uploaded media will be stored (in addition
# to S3, if that is enabled) and the URL from which media will be downloaded.
# These URLs (but not the dir) *must* end in a slash.

media_dir = /export/msoy/pages/media
media_url = http://localhost:8080/media/
static_media_url = http://localhost:8080/media/static/

#
# S3-backed media storage configuration.

# media_s3enable = true
# media_s3bucket = media.whirled.com
# media_s3id = AWS ID
# media_s3key = SECRET KEY

#
# Cloudfront distribution, if any
# cloud_distribution =
# cloud_id = AWS ID
# cloud_key = SECRET KEY

#
# Amazon hands out its private key in RSA PEM format. Java expects DER through its PKCS8 reader:
#   openssl pkcs8 -topk8 -in pk-XXX.pem -nocrypt -outform DER -out pk-XXX.der
#   openssl base64 -e -in pk-XXX.der
# You can NOT simply copy the Base64-looking lines from the PEM file!
#
# cloud_signing_key_id = id of aws key pair dedicated to signing cloudfront URLs
# cloud_signing_key = the Base64-encoded DER translation of (private half of) the signing key

#
# Flash needs signed references to crossdomain.xml and MediaStub.swf. Create these (near)-infinite-expiration ones with:
#    bin/cloudfront signepoch ${media_url}/crossdomain.xml 2147483647
#    bin/cloudfront signepoch ${media_url}/MediaStub.swf 2147483647
# else if unset, it defaults to ${media_url}crossdomain.xml and ${media_url}MediaStub.swf
# xdom_url = http://localhost:8080/media/crossdomain.xml
# stub_url = http://localhost:8080/media/MediaStub.swf

#
# This is where ToyBox looks for uploaded game jar files

toybox.resource_dir = /export/msoy/pages/media

#
# Our Postgres database configuration

db.default.server = localhost
db.default.port = 5432
db.default.database = msoy
db.default.username = USERNAME
db.default.password = PASSWORD

db.readonly.maxconns = 1
db.readwrite.maxconns = 1

#
# Bits for the OOO authenticator

oooauth.login_url = /register/register.wm?from=%R
oooauth.access_denied_url = /register/access_denied.wm

#
# Connection details for the event log server. The spool directory is relative
# to the server_root unless it starts with /.

# event_remote_uri = s3://<access_id>:<access_key>@<event_bucket>/
# event_log_spool_dir = run

# Set the following to true, to display Panopticon messages as they're being logged
# event_log_debug = false

#
# Messaging properties used to communicate with other systems, such as billing

# messaging.server.addresses=localhost:5672
# messaging.server.virtualhost=localhost
# messaging.server.username=whirled
# messaging.server.password=PASSWORD
# messaging.server.realm=/data
# messaging.server.heartbeat=0
# messaging.server.replyTimeout=4000

#
# Jabber component configuration
#
# jabber.host = localhost
# jabber.port = 5275
# jabber.secret = secret
# jabber.gateways = aim,msn,yahoo,icq

#
# Keys for accessing the reCAPTCHA verification service

# recaptcha_public = RECAPTCHA_PUBLIC_KEY
# recaptcha_private = RECAPTCHA_PRIVATE_KEY

# Keys for operating bureau launchers

local_bureaus = true
# bureau_secret = you can't guess this
# window_secret = only the computer knows

# Static log settings for action script deployments (default is to log everything, see Log.as)
# log_levels_config = :warning;com.threerings.msoy:info

#
# URL Whirled should send the user to when they need to go to billing

billing_url = https://billing.dev.whirled.com/billing/

# Account ID for Google Analytics
ga_account = UA-169037-5
